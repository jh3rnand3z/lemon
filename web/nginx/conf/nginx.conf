user www-data;
worker_processes 2;
pid /var/run/nginx.pid;

error_log /var/log/nginx/error.log;

events {
    worker_connections 1024;
    use epoll;
}

http {
    # Enumerate all the Tornado servers here
    upstream frontends {
        server 172.31.16.18:8000;
        server 172.31.16.19:8000;
        server 172.31.16.19:8001;
    }

    # Enumerate all the backend servers here
    upstream backends {
        server 172.31.17.107:8000;
    }

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;

    keepalive_timeout 65;
    proxy_read_timeout 200;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/html text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;

    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating 
    # "queries of death" to all frontends)
    proxy_next_upstream error;

    server {
        listen 80;

        # Allow file uploads
        client_max_body_size 50M;

        location ^~ /static/ {
            root /home/admin/seed;
            
            if ($query_string) {
                expires max;
            }
        }
	
	    location ^~ /demo/ {
 	       root /var/www;

	        if ($query_string) {
                expires max;
            }
	    }

        location = /favicon.ico {
            rewrite (.*) /static/img/favicon.ico;
        }

        location = /robots.txt {
            rewrite (.*) /static/robots.txt;
        }

        location = /humans.txt {
            rewrite (.*) /static/humans.txt;
        }

	    location / {
            try_files $uri @mango;
	    }

        location @mango {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://frontends;
        }

        location @howler {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://backends;
        }
    }
}